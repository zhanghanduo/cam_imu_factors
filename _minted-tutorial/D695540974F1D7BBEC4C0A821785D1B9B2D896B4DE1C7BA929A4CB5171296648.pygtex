\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{k}{class} \PYG{n+nc}{MarginalizationInfo} \PYG{p}{\PYGZob{}}
\PYG{c+c1}{// All the observable factors (in form of residual block information).}
\PYG{n}{std}\PYG{o}{::}\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{n}{ResidualBlockInfo} \PYG{o}{*\PYGZgt{}} \PYG{n}{factors}\PYG{p}{;}
        \PYG{c+c1}{// pos: size of all variables (local size).}
\PYG{c+c1}{// n: number of remaining variables to be optimized (local size).}
\PYG{c+c1}{// m: number of variables to be marginalized (local size).}

\PYG{k+kt}{int} \PYG{n}{m}\PYG{p}{,} \PYG{n}{n}\PYG{p}{;}

\PYG{c+c1}{// The memory address of variables to be optimized.}
\PYG{c+c1}{// <long, int> where first element is address of variable.}
\PYG{c+c1}{// second element is the number of outputs (residuals) in "parameter_block_sizes_" in ceres::cost_function}

\PYG{c+c1}{// "parameter_block_sizes_":}
\PYG{c+c1}{// parameters in cost_function is an array of pointers to arrays containing the}
\PYG{c+c1}{// various parameter blocks. parameters has the same number of}
\PYG{c+c1}{// elements as parameter_block_sizes_.  Parameter blocks are in the}
\PYG{c+c1}{// same order as parameter_block_sizes_.i.e.,}
\PYG{c+c1}{//}
\PYG{c+c1}{//   parameters_[i] = double[parameter_block_sizes_[i]]}

\PYG{n}{std}\PYG{o}{::}\PYG{n}{unordered\PYGZus{}map}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{long}\PYG{p}{,} \PYG{k+kt}{int}\PYG{o}{\PYGZgt{}} \PYG{n}{parameter\PYGZus{}block\PYGZus{}size}\PYG{p}{;} \PYG{c+c1}{//global size}
\PYG{c+c1}{// Corresponding data (double*) of "parameter_block_size".}
\PYG{n}{std}\PYG{o}{::}\PYG{n}{unordered\PYGZus{}map}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{long}\PYG{p}{,} \PYG{k+kt}{double} \PYG{o}{*\PYGZgt{}} \PYG{n}{parameter\PYGZus{}block\PYGZus{}data}\PYG{p}{;}

\PYG{k+kt}{int} \PYG{n}{sum\PYGZus{}block\PYGZus{}size}\PYG{p}{;}
\PYG{c+c1}{// Ids in "parameter_block_size", the memory address of variables to be marginalized.}
\PYG{n}{std}\PYG{o}{::}\PYG{n}{unordered\PYGZus{}map}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{long}\PYG{p}{,} \PYG{k+kt}{int}\PYG{o}{\PYGZgt{}} \PYG{n}{parameter\PYGZus{}block\PYGZus{}idx}\PYG{p}{;} \PYG{c+c1}{//local size}

\PYG{c+c1}{// Example: frame 0 observed k=68 landmarks, then:}
\PYG{c+c1}{// parameter_block_size size: 2(V0,V1) + 11(P0,...,P10) + 1 (Tbc) + 1(tb) + 68 = 83.}
\PYG{c+c1}{// pos: 9x2 + 6x11 + 6 + 1 + 68 = 159.}
\PYG{c+c1}{// parameter_block_idx size: 1(P0) + 1(V0) + 68 = 70.}
\PYG{c+c1}{// m: 6 + 9 + 68 = 83.}
\PYG{c+c1}{// n = pos - m = 159 - 83 = 76.}

\PYG{n}{std}\PYG{o}{::}\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}} \PYG{n}{keep\PYGZus{}block\PYGZus{}size}\PYG{p}{;} \PYG{c+c1}{//global size}
\PYG{n}{std}\PYG{o}{::}\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{int}\PYG{o}{\PYGZgt{}} \PYG{n}{keep\PYGZus{}block\PYGZus{}idx}\PYG{p}{;}  \PYG{c+c1}{//local size}
\PYG{n}{std}\PYG{o}{::}\PYG{n}{vector}\PYG{o}{\PYGZlt{}}\PYG{k+kt}{double} \PYG{o}{*\PYGZgt{}} \PYG{n}{keep\PYGZus{}block\PYGZus{}data}\PYG{p}{;}


\PYG{p}{\PYGZcb{}}
\end{Verbatim}
